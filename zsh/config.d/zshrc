#
# .zshrc - The zsh configuration
#

bindkey -e

autoload -Uz compinit && compinit
autoload -Uz colors   && colors
autoload -Uz zmv      && alias zmv='noglob zmv -W'

setopt auto_cd           # cd without cd
setopt extended_history  # include timestamp and duration to the history.
setopt share_history     # persist history to the file.
setopt magic_equal_subst # expand filename for unquoted arguments.
setopt mark_dirs         # insert '/' when directory is expanded via globbing.
setopt no_beep           # disable beep in ZLE.
setopt prompt_subst      # enable substitution in prompt (needed if we want to show information in PROMPT).

zstyle ':completion:*:default' menu select=2  # enable menu in completion.

function ls () {
  command ls --color $@
}

function date () {
  case ${OSTYPE} in
    darwin*)
      command gdate $@ ;;
    linux*)
      command date $@ ;;
  esac
}

function retcode () {
  echo $?
}

function git-home () {
  cd `git rev-parse --show-toplevel`
}

# tier1
export EDITOR=vim
export FZF_DEFAULT_OPTS='--height 50% --reverse --border'
export GOPATH=$HOME/go
export GHQ_ROOT=$HOME/work
export HISTFILE=$HOME/.zsh-history
export HISTSIZE=100000
export PYTHONDONTWRITEBYTECODE=1
export SAVEHIST=100000
export TERM=xterm-256color
export XDG_CONFIG_HOME=$HOME/.config

# tier2
export HIMKT_DOTFILES_PRIVATE_CONFIG_DIR=$XDG_CONFIG_HOME/himkt/dotfiles/zsh/config.d
export TIPS_HOME=$GHQ_ROOT/github.com/himkt/tips-data

language=en_US.UTF-8
# If `en_US.UTF-8` is not available, fallback to `C.utf8`
if [ "`locale -a | grep $language`" != $language ]; then
  language=C.utf8
fi
export LANG=$language
export LC_CTYPE=$language

for source in $(find $HIMKT_DOTFILES_PRIVATE_CONFIG_DIR -name "*.pre.zsh")
do
  source $source
done

case `uname -s` in
Darwin*)
  export HOMEBREW_ROOT=/opt/homebrew
  export HOMEBREW_CACHE=$HOME/.cache/Homebrew
  ;;
Linux*)
  export HOMEBREW_ROOT=/home/linuxbrew/.linuxbrew
  ;;
esac

for prefix in $HOMEBREW_ROOT $HOME $HOME/.local $HOME/dotfiles $GOPATH $HOME/.rd; do
  export PATH=$PATH:$prefix/bin
done

if command -v brew > /dev/null; then
  export BREW_HOME=$(brew --prefix)
  export HOMEBREW_NO_AUTO_UPDATE=1
  eval $(brew shellenv)

  if [ -d "$HOMEBREW_ROOT/opt/xz" ]; then
    export CONFIGURE_OPTS="--enable-shared"
    export CPPFLAGS="-I$(brew --prefix xz)/include"
    export LDFLAGS="-L$(brew --prefix xz)/lib"
  fi

  if [ -d "$HOMEBREW_ROOT/opt/openjdk" ]; then
    export PATH="$HOMEBREW_ROOT/opt/openjdk/bin:$PATH"
    export CPPFLAGS="$CPPFLAGS:-I$HOMEBREW_ROOT/opt/openjdk/include"
  fi

  if [ -d "$HOMEBREW_ROOT/opt/libpq/bin" ]; then
    export PATH="$HOMEBREW_ROOT/opt/libpq/bin:$PATH"
  fi
fi

export PYTHONSYSTEMPATH=$(which python3)

# NOTE; Utilities

function current_context () {
  if test -f $XDG_CONFIG_HOME/kubectl-toggle-ctx/hide; then
    return
  fi

  if ! command -v kubectl > /dev/null; then
    return
  fi

  current_context=$(command kubectl config current-context) &> /dev/null
  if [ "$?" -ne 0 ]; then
    return
  fi

  echo "[$fg_bold[blue]$current_context$reset_color]"
}

function current_path () {
  echo "[$fg_bold[yellow]%~$reset_color]"
}

function current_timestamp () {
  echo "[$fg_bold[red]$(date +'%H:%M:%S')$reset_color]"
}

function current_git_status () {
  local git_branch="$(git rev-parse --abbrev-ref HEAD 2>/dev/null)"
  if [ -z "$git_branch" ]; then
    return
  fi

  UNTRACK_STATUS=""
  UNTRACK_STATUS+="$fg_bold[red]$(git ls-files --other --exclude-standard | wc -l | awk '{print $1}')$reset_color"
  UNTRACK_STATUS+="$fg_bold[yellow]$(git diff --name-only | wc -l | awk '{print $1}')$reset_color"
  UNTRACK_STATUS+="$fg_bold[green]$(git diff --name-only --staged | wc -l | awk '{print $1}')$reset_color"
  BRANCH_NAME="$fg_bold[red]$git_branch$reset_color"
  echo "[$UNTRACK_STATUS$fg_bold[gray]@$BRANCH_NAME$reset_color]"
}

PROMPT='$(current_timestamp)$(current_context)$(current_path)$(current_git_status)'
PROMPT+=$'\n'
PROMPT+='> '
SPROMPT="${fg[red]}%r$reset_color is correct? [y, n, a, e]:"

if command -v fzf > /dev/null; then
  source <(fzf --zsh)
fi

if command -v mise > /dev/null; then
  eval "$(mise activate zsh)"
fi

if command -v nvim > /dev/null; then
  alias vim=nvim
  export EDITOR=nvim
fi

if command -v sheldon > /dev/null; then
  eval "$(sheldon -q source)"
fi

if command -v zoxide > /dev/null; then
  eval "$(zoxide init zsh)"
fi

if command -v kubectl > /dev/null; then
  export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"
  source <(kubectl completion zsh)
  alias k=kubectl
fi

if [ -f "$HOME/.cargo/env" ]; then
  . "$HOME/.cargo/env"
fi

for source in $(find $HIMKT_DOTFILES_PRIVATE_CONFIG_DIR -name "*.post.zsh")
do
  source $source
done
